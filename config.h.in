#ifndef __ARCH_CONFIG_H__
#define __ARCH_CONFIG_H__
#include <ctcfg.h>

using config = ctcfg::config_holder<
    ctcfg::string_entry<"version.version", "@VERSION@">,
    ctcfg::string_entry<"version.git-info", "$GIT_VERSION_INFO">,
    ctcfg::string_entry<"version.full-version", "@VERSION@-$GIT_VERSION_INFO">,
    ctcfg::string_entry<"arch", "@ARCH@">,
    ctcfg::string_entry<"arch-path", "@ARCH_PATH@">,
    ctcfg::size_entry<"pmm-count", @PMM_COUNT@>,
    ctcfg::size_entry<"preallocate-pages", @PRE_ALLOCATE_PAGES@>,
    ctcfg::size_entry<"klog-pages", @KLOG_PAGES@>,
    ctcfg::size_entry<"cpuid-feature-size", @CPUID_FEATURE_SIZE@>,
    ctcfg::address_entry<"mmap.start.hhdm", @HHDM_START@>,
    ctcfg::address_entry<"mmap.start.scrollback", @SCROLLBACK_START@>,
    ctcfg::address_entry<"mmap.start.heap", @HEAP_START@>,
    ctcfg::address_entry<"mmap.start.slab", @SLAB_START@>,
    ctcfg::address_entry<"mmap.start.kernel", 0xffffffff80000000>,
    ctcfg::bool_entry<"debug.log.mmap", @DEBUG_LOG_MMAP@>,
    ctcfg::bool_entry<"debug.log.cpuid", @DEBUG_LOG_CPUID@>,
    ctcfg::bool_entry<"debug.log.acpi", @DEBUG_LOG_ACPI@>,
    ctcfg::bool_entry<"debug.log.pci", @DEBUG_LOG_PCI@>,
    ctcfg::bool_entry<"debug.lock.spinlock_dep", @DEBUG_SPINLOCK_DEP@>,
    ctcfg::size_entry<"slab.min_order", @SLAB_MIN_ORDER@>,
    ctcfg::size_entry<"slab.max_order", @SLAB_MAX_ORDER@>,
    ctcfg::size_entry<"slab.slab_size_order", @SLAB_SIZE_ORDER@>
>;

static_assert(config::get_val<"slab.min_order"> <= config::get_val<"slab.max_order">);
static_assert(config::get_val<"slab.max_order"> <= config::get_val<"slab.slab_size_order">);

#mesondefine COMPILER_GCC
#mesondefine COMPILER_CLANG

#endif
